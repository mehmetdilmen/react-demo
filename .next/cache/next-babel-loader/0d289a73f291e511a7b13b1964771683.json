{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\",\n    _this = this;\n\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\n\nvar Questions = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var router, pid, res, detail;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            router = useRouter();\n            pid = router.query.pid;\n            _context.next = 5;\n            return fetch('https://polls.apiblueprint.org/questions/' + pid);\n\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n\n          case 8:\n            detail = _context.sent;\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.detail[0].url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 11\n            }, _this));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n    return [useRouter];\n  }));\n\n  return function Questions() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["useRouter","fetch","Questions","router","pid","query","res","json","detail","props","url"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAKA,IAAMC,SAAS;AAAA;;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACXC,YAAAA,MADW,GACFH,SAAS,EADP;AAETI,YAAAA,GAFS,GAEDD,MAAM,CAACE,KAFN,CAETD,GAFS;AAAA;AAAA,mBAKCH,KAAK,CAAC,8CAA8CG,GAA/C,CALN;;AAAA;AAKXE,YAAAA,GALW;AAAA;AAAA,mBAMIA,GAAG,CAACC,IAAJ,EANJ;;AAAA;AAMXC,YAAAA,MANW;AAAA,0DAQR;AAAA,wBAAIC,KAAK,CAACD,MAAN,CAAa,CAAb,EAAgBE;AAApB;AAAA;AAAA;AAAA;AAAA,qBARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YACCV,SADD;AAAA;;AAAA,kBAATE,SAAS;AAAA;AAAA;AAAA,GAAf;;KAAMA,S;AAaN,eAAeA,SAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport fetch from 'isomorphic-fetch';\r\n\r\n\r\n\r\n\r\nconst Questions = async() => {\r\n\tconst router = useRouter()\r\n\tconst { pid } = router.query\r\n\r\n\r\n\tconst res = await fetch('https://polls.apiblueprint.org/questions/' + pid);\r\n\tconst detail = await res.json();\r\n\r\n  \treturn <p>{props.detail[0].url}</p>\r\n};\r\n\r\n\r\n\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}