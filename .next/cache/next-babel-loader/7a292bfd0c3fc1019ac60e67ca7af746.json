{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\n\nvar Questions = function Questions(props) {\n  _s();\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: props.detail.question\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Questions, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Questions;\n\nQuestions.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var pid, res, detail;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pid = props.router.query.pid;\n            _context.next = 3;\n            return fetch('https://polls.apiblueprint.org/questions/' + pid);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            detail = _context.sent;\n            return _context.abrupt(\"return\", {\n              detail: detail\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["useRouter","fetch","Questions","props","router","detail","question","getInitialProps","pid","query","res","json"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAC3B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,sBAAO;AAAA,cAAIG,KAAK,CAACE,MAAN,CAAaC;AAAjB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAHD;;GAAMJ,S;UACWF,S;;;KADXE,S;;AAMNA,SAAS,CAACK,eAAV;AAAA,sEAA4B,iBAAOJ,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBK,YAAAA,GADiB,GACTL,KAAK,CAACC,MAAN,CAAaK,KADJ,CACjBD,GADiB;AAAA;AAAA,mBAGTP,KAAK,CAAC,8CAA8CO,GAA/C,CAHI;;AAAA;AAGrBE,YAAAA,GAHqB;AAAA;AAAA,mBAINA,GAAG,CAACC,IAAJ,EAJM;;AAAA;AAIrBN,YAAAA,MAJqB;AAAA,6CAMpB;AACNA,cAAAA,MAAM,EAANA;AADM,aANoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeH,SAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport fetch from 'isomorphic-fetch';\r\n\t\r\nconst Questions = (props) => {\r\n  const router = useRouter()\r\n  return <p>{props.detail.question}</p>\r\n}\r\n\r\n\r\nQuestions.getInitialProps = async (props) => {\t\r\n   const { pid } = props.router.query\r\n\r\n\tconst res = await fetch('https://polls.apiblueprint.org/questions/' + pid);\r\n\tconst detail = await res.json();\r\n\r\n\treturn {\r\n\t\tdetail\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}