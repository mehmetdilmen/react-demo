{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\",\n    _this = this;\n\nimport fetch from 'isomorphic-fetch';\n\nvar Questions = function Questions(props) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: props.detail.question\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = Questions;\n\nQuestions.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var params, res, detail;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _ref.params;\n            _context.next = 3;\n            return fetch(\"https://polls.apiblueprint.org/\".concat(params.id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            detail = _context.sent;\n            return _context.abrupt(\"return\", {\n              detail: detail\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport var __N_SSG = true;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["fetch","Questions","props","detail","question","getInitialProps","params","id","res","json"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAG3B,sBAAO;AAAA,cAAIA,KAAK,CAACC,MAAN,CAAaC;AAAjB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAJD;;KAAMH,S;;AAeNA,SAAS,CAACI,eAAV;AAAA,uEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,MAAT,QAASA,MAAT;AAAA;AAAA,mBACTN,KAAK,0CAAmCM,MAAM,CAACC,EAA1C,EADI;;AAAA;AACrBC,YAAAA,GADqB;AAAA;AAAA,mBAENA,GAAG,CAACC,IAAJ,EAFM;;AAAA;AAErBN,YAAAA,MAFqB;AAAA,6CAIpB;AACNA,cAAAA,MAAM,EAANA;AADM,aAJoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;;AAYA,eAAeF,SAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport fetch from 'isomorphic-fetch';\r\n\t\r\nconst Questions = (props) => {\r\n\r\n\r\n  return <p>{props.detail.question}</p>\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const router = useRouter()\r\n  const { pid } = router.query\r\n  return {\r\n    paths: [{ params: { id: '2' } }],\r\n    fallback: true,\r\n  }\r\n}\r\n\r\nQuestions.getInitialProps = async ({ params }) => {\t\r\n\tconst res = await fetch(`https://polls.apiblueprint.org/${params.id}`);\r\n\tconst detail = await res.json();\r\n\r\n\treturn {\r\n\t\tdetail\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport default Questions;\r\n\r\n"]},"metadata":{},"sourceType":"module"}