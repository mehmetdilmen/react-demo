{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\n\nvar Questions = function Questions(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.detail\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 2\n  }, _this);\n};\n\n_c = Questions;\nQuestions.getInitialProps = /*#__PURE__*/_asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var router, pid, res, detail;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _s();\n\n          router = useRouter();\n          pid = router.query.pid;\n          _context.next = 5;\n          return fetch('https://polls.apiblueprint.org/questions/' + pid);\n\n        case 5:\n          res = _context.sent;\n          _context.next = 8;\n          return res.json();\n\n        case 8:\n          detail = _context.sent;\n          return _context.abrupt(\"return\", {\n            detail: detail\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}), \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n}));\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["useRouter","fetch","Questions","props","detail","getInitialProps","router","pid","query","res","json"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,sBACtB;AAAA,cACEA,KAAK,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,WADsB;AAAA,CAAvB;;KAAMF,S;AAONA,SAAS,CAACG,eAAV,4EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACpBC,UAAAA,MADoB,GACXN,SAAS,EADE;AAElBO,UAAAA,GAFkB,GAEVD,MAAM,CAACE,KAFG,CAElBD,GAFkB;AAAA;AAAA,iBAKTN,KAAK,CAAC,8CAA8CM,GAA/C,CALI;;AAAA;AAKrBE,UAAAA,GALqB;AAAA;AAAA,iBAMNA,GAAG,CAACC,IAAJ,EANM;;AAAA;AAMrBN,UAAAA,MANqB;AAAA,2CAQpB;AACNA,YAAAA,MAAM,EAANA;AADM,WARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAAA,UACiBJ,SADjB;AAAA;AAgBA,eAAeE,SAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport fetch from 'isomorphic-fetch';\r\n\t\r\nconst Questions = props => (\r\n\t<div>\r\n\t\t{props.detail}\r\n\t</div>\r\n);\r\n\r\n\r\nQuestions.getInitialProps = async () => {\t\r\n  const router = useRouter()\r\n  const { pid } = router.query\r\n  \r\n\r\n\tconst res = await fetch('https://polls.apiblueprint.org/questions/' + pid);\r\n\tconst detail = await res.json();\r\n\r\n\treturn {\r\n\t\tdetail\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}