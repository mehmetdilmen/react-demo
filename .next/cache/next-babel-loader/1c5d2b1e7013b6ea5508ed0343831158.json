{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from '../../Components/Header';\nimport { useRouter } from 'next/router';\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, CardText, Container, Row, Col } from \"reactstrap\";\nimport Moment from 'moment';\n\nfunction Question() {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    choices: []\n  });\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  useEffect(() => {\n    fetch(`https://polls.apiblueprint.org/questions/${pid}`).then(response => response.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        md: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: data.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: data.choices.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Option: \", item.choice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 12\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              children: Moment(data.published_at).format('YYYY-MM-DD')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["React","useState","useEffect","Header","useRouter","Card","CardHeader","CardBody","CardFooter","CardTitle","CardText","Container","Row","Col","Moment","Question","loading","setLoading","data","setData","choices","router","pid","query","fetch","then","response","json","question","map","item","choice","published_at","format"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAQC,IAAR,EAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2DC,QAA3D,EAAqEC,SAArE,EAAgFC,GAAhF,EAAqFC,GAArF,QAA+F,YAA/F;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAIA,SAASC,QAAT,GAAoB;AACnB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACiB,IAAD;AAAA,OAAOC;AAAP,MAAkBlB,QAAQ,CAAC;AAACmB,IAAAA,OAAO,EAAE;AAAV,GAAD,CAAhC;AACA,QAAMC,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAUD,MAAM,CAACE,KAAvB;AAGArB,EAAAA,SAAS,CAAC,MAAM;AACfsB,IAAAA,KAAK,CAAE,4CAA2CF,GAAI,EAAjD,CAAL,CAAyDG,IAAzD,CAA8DC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA1E,EAA2FF,IAA3F,CAAgGP,IAAI,IAAI;AACvGC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACA,KAFD;AAGA,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACC;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAGA,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,+BACD,QAAC,GAAD;AAAA,iCACK,QAAC,IAAD;AAAA,oCACE,QAAC,UAAD;AAAA,wBAAaA,IAAI,CAACU;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,QAAD;AAAA,wBAEAV,IAAI,CAACE,OAAL,CAAaS,GAAb,CAAiBC,IAAI,iBACpB;AAAA,uCAAcA,IAAI,CAACC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD;AAFA;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE,QAAC,UAAD;AAAA,wBAAajB,MAAM,CAACI,IAAI,CAACc,YAAN,CAAN,CAA0BC,MAA1B,CAAiC,YAAjC;AAAb;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyBA;;AAGD,eAAelB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from '../../Components/Header';\r\nimport { useRouter } from 'next/router';\r\nimport {Card, CardHeader, CardBody, CardFooter, CardTitle, CardText, Container, Row, Col} from \"reactstrap\"\r\nimport Moment from 'moment';\r\n\r\n\r\n\r\nfunction Question() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [data, setData] = useState({choices: []});\r\n\tconst router = useRouter()\r\n\tconst { pid } = router.query\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`https://polls.apiblueprint.org/questions/${pid}`).then(response => response.json()).then(data => {\r\n\t\t\tsetData(data)\r\n\t\t});\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t<Header/>\r\n\r\n\t\t<Container>\r\n\t\t  <Row md=\"2\">\r\n\t\t\t<Col>\t\t\r\n\t\t      <Card>\r\n\t\t        <CardHeader>{data.question}</CardHeader>\r\n\t\t        <CardBody>\r\n\t\t       \r\n\t\t\t      {data.choices.map(item => (\r\n\t\t\t        <div>Option: {item.choice}</div>\r\n\t\t\t      ))}\r\n\r\n\t\t        </CardBody>\r\n\t\t        <CardFooter>{Moment(data.published_at).format('YYYY-MM-DD')}</CardFooter>\r\n\t\t      </Card>\r\n\t\t      </Col>\r\n\t\t  </Row>\r\n\t\t</Container>\t      \r\n\t\t</div>\r\n\t)\r\n\r\n\r\n} \r\n\r\n\r\nexport default Question"]},"metadata":{},"sourceType":"module"}