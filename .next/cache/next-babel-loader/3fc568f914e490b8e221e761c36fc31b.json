{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\new.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Image, Message } from 'semantic-ui-react';\nimport InlineError from '../components/InlineError';\n\nclass NewQuestionForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      _id: this.props.movie ? this.props.movie._id : '',\n      title: this.props.movie ? this.props.movie.title : '',\n      cover: this.props.movie ? this.props.movie.cover : ''\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", () => {\n      const errors = this.validate();\n      this.setState({\n        errors,\n        redirect: true\n      });\n\n      const _id = this.state._id || this.props.newMovie.movie._id;\n\n      if (Object.keys(errors).length === 0) {\n        if (!_id) this.props.onNewMovieSubmit(this.state);else this.props.onUpdateMovieSubmit(_objectSpread(_objectSpread({}, this.state), {}, {\n          _id\n        }));\n      }\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      movie\n    } = nextProps.newMovie;\n\n    if (movie.title && movie.title !== this.state.title) {\n      this.setState({\n        title: movie.title,\n        cover: movie.cover\n      });\n    }\n  }\n\n  render() {\n    const form = /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          name: \"title\",\n          value: this.state.title,\n          onChange: this.handleChange,\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Cover Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cover\",\n          name: \"cover\",\n          value: this.state.cover,\n          onChange: this.handleChange,\n          placeholder: \"Cover Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        src: this.state.cover,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clearfix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\n_defineProperty(NewQuestionForm, \"propTypes\", {\n  onNewMovieSubmit: PropTypes.func.isRequired\n});\n\nexport default NewQuestionForm;","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/new.js"],"names":["React","Component","PropTypes","Button","Form","Image","Message","InlineError","NewQuestionForm","_id","props","movie","title","cover","e","setState","target","name","value","errors","validate","redirect","state","newMovie","Object","keys","length","onNewMovieSubmit","onUpdateMovieSubmit","componentWillReceiveProps","nextProps","render","form","onSubmit","handleChange","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form, Image, Message } from 'semantic-ui-react'\r\nimport InlineError from '../components/InlineError';\r\n\r\nclass NewQuestionForm extends Component {\r\n\tstate = {\r\n\t\t_id: this.props.movie ? this.props.movie._id : '',\r\n\t\ttitle: this.props.movie ? this.props.movie.title : '',\r\n\t\tcover: this.props.movie ? this.props.movie.cover : ''\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tonNewMovieSubmit: PropTypes.func.isRequired\r\n\t};\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tconst { movie } = nextProps.newMovie;\r\n\t\tif (\r\n\t\t\tmovie.title\r\n\t\t\t&&\r\n\t\t\tmovie.title !== this.state.title\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttitle: movie.title,\r\n\t\t\t\tcover: movie.cover,\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tonSubmit = () => {\r\n\t\tconst errors = this.validate();\r\n\t\tthis.setState({\r\n\t\t\terrors,\r\n\t\t\tredirect: true\r\n\t\t});\r\n\r\n\t\tconst _id = this.state._id || this.props.newMovie.movie._id;\r\n\r\n\t\tif (Object.keys(errors).length === 0) {\r\n\t\t  if (!_id)\r\n\t\t\t\tthis.props.onNewMovieSubmit(this.state);\r\n\t\t\telse\r\n\t\t\t\tthis.props.onUpdateMovieSubmit({ ...this.state, _id});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst form = (\r\n\t\t\t<Form onSubmit={this.onSubmit}>\r\n\t\t\t\t<Form.Field>\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder='Title' />\r\n\t\t\t\t</Form.Field>\r\n\t\t\t\t<Form.Field>\r\n\t\t\t\t\t<label>Cover Url</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"cover\"\r\n\t\t\t\t\t\tname=\"cover\"\r\n\t\t\t\t\t\tvalue={this.state.cover}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder='Cover Url' />\r\n\t\t\t\t</Form.Field>\r\n\t\t\t\t<Image src={this.state.cover} size='small' />\r\n\t\t\t\t<div className=\"clearfix\"></div>\r\n\t\t\t\t<Button type='submit'>Submit</Button>\r\n\t\t\t</Form>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default NewQuestionForm;"]},"metadata":{},"sourceType":"module"}