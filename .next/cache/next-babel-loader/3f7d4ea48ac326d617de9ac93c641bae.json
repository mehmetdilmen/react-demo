{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\n\nvar Questions = function Questions() {\n  _s();\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Post: \", detail]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Questions, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Questions;\nQuestions.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var pid, res, detail;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pid = router.query;\n          _context.next = 3;\n          return fetch('https://polls.apiblueprint.org/questions/' + pid);\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          detail = _context.sent;\n          return _context.abrupt(\"return\", {\n            detail: detail\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["useRouter","fetch","Questions","router","detail","getInitialProps","pid","query","res","json"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,sBAAO;AAAA,yBAAUI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAJD;;GAAMF,S;UACWF,S;;;KADXE,S;AAMNA,SAAS,CAACG,eAAV,yEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,GADqB,GACfH,MAAM,CAACI,KADQ;AAAA;AAAA,iBAETN,KAAK,CAAC,8CAA8CK,GAA/C,CAFI;;AAAA;AAErBE,UAAAA,GAFqB;AAAA;AAAA,iBAGNA,GAAG,CAACC,IAAJ,EAHM;;AAAA;AAGrBL,UAAAA,MAHqB;AAAA,2CAKpB;AACNA,YAAAA,MAAM,EAANA;AADM,WALoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAUA,eAAeF,SAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport fetch from 'isomorphic-fetch';\r\n\t\r\nconst Questions = () => {\r\n  const router = useRouter()\r\n\r\n  return <p>Post: {detail}</p>\r\n}\r\n\r\nQuestions.getInitialProps = async () => {\r\n\tconst pid = router.query\r\n\tconst res = await fetch('https://polls.apiblueprint.org/questions/' + pid);\r\n\tconst detail = await res.json();\r\n\r\n\treturn {\r\n\t\tdetail\r\n\t}\r\n};\r\n\r\nexport default Questions"]},"metadata":{},"sourceType":"module"}