{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\n\nvar Questions = function Questions() {\n  _s();\n\n  var router = useRouter();\n  var pid = router.query.pid;\n  Questions.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, detail;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://polls.apiblueprint.org/questions/' + pid);\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            detail = _context.sent;\n            return _context.abrupt(\"return\", {\n              detail: detail\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: pid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Questions, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["useRouter","fetch","Questions","router","pid","query","getInitialProps","res","json","detail"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADsB,MAEdI,GAFc,GAEND,MAAM,CAACE,KAFD,CAEdD,GAFc;AAKvBF,EAAAA,SAAS,CAACI,eAAV,yEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACTL,KAAK,CAAC,8CAA8CG,GAA/C,CADI;;AAAA;AACrBG,YAAAA,GADqB;AAAA;AAAA,mBAENA,GAAG,CAACC,IAAJ,EAFM;;AAAA;AAErBC,YAAAA,MAFqB;AAAA,6CAIpB;AACNA,cAAAA,MAAM,EAANA;AADM,aAJoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;AAUC,sBAAO;AAAA,cAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAhBD;;GAAMF,S;UACWF,S;;;KADXE,S;AAoBN,eAAeA,SAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport fetch from 'isomorphic-fetch';\r\n\t\r\nconst Questions = () => {\r\n  const router = useRouter()\r\n  const { pid } = router.query\r\n\r\n\r\n\tQuestions.getInitialProps = async () => {\t\r\n\t\tconst res = await fetch('https://polls.apiblueprint.org/questions/' + pid);\r\n\t\tconst detail = await res.json();\r\n\r\n\t\treturn {\r\n\t\t\tdetail\r\n\t\t}\r\n\t};\r\n  \r\n\t\r\n  return <p>{pid}</p>\r\n}\r\n\r\n\r\n\r\nexport default Questions"]},"metadata":{},"sourceType":"module"}