{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, CardText, Container, Row, Col } from \"reactstrap\";\n\nfunction Question() {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState({});\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  useEffect(() => {\n    fetch(`https://polls.apiblueprint.org/questions/${pid}`).then(response => response.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        md: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: \"Header\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: data.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(CardText, {\n                children: \"With supporting text below as a natural lead-in to additional content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              children: data.published_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["React","useState","useEffect","useRouter","Card","CardHeader","CardBody","CardFooter","CardTitle","CardText","Container","Row","Col","Question","loading","setLoading","data","setData","router","pid","query","fetch","then","response","json","question","published_at"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAQC,IAAR,EAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2DC,QAA3D,EAAsEC,SAAtE,EAAiFC,GAAjF,EAAsFC,GAAtF,QAAgG,YAAhG;;AAIA,SAASC,QAAT,GAAoB;AACnB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACe,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMiB,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAUD,MAAM,CAACE,KAAvB;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,KAAK,CAAE,4CAA2CF,GAAI,EAAjD,CAAL,CAAyDG,IAAzD,CAA8DC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA1E,EAA2FF,IAA3F,CAAgGN,IAAI,IAAI;AACvGC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACA,KAFD;AAGA,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACC;AAAA,2BACA,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,+BACD,QAAC,GAAD;AAAA,iCACK,QAAC,IAAD;AAAA,oCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,GAAG,EAAC,IAAf;AAAA,0BAAqBA,IAAI,CAACS;AAA1B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAME,QAAC,UAAD;AAAA,wBAAaT,IAAI,CAACU;AAAlB;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA;;AAGD,eAAeb,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useRouter } from 'next/router';\r\nimport {Card, CardHeader, CardBody, CardFooter, CardTitle, CardText , Container, Row, Col} from \"reactstrap\"\r\n\r\n\r\n\r\nfunction Question() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [data, setData] = useState({});\r\n\tconst router = useRouter()\r\n\tconst { pid } = router.query\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`https://polls.apiblueprint.org/questions/${pid}`).then(response => response.json()).then(data => {\r\n\t\t\tsetData(data)\r\n\t\t});\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t<Container>\r\n\t\t  <Row md=\"2\">\r\n\t\t\t<Col>\t\t\r\n\t\t      <Card>\r\n\t\t        <CardHeader>Header</CardHeader>\r\n\t\t        <CardBody>\r\n\t\t          <CardTitle tag=\"h5\">{data.question}</CardTitle>\r\n\t\t          <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n\t\t        </CardBody>\r\n\t\t        <CardFooter>{data.published_at}</CardFooter>\r\n\t\t      </Card>\r\n\t\t      </Col>\r\n\t\t  </Row>\r\n\t\t</Container>\t      \r\n\t\t</div>\r\n\t)\r\n\r\n\r\n} \r\n\r\n\r\nexport default Question"]},"metadata":{},"sourceType":"module"}