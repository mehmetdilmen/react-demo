{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Mehmet/Desktop/yemekcom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\",\n    _this = this;\n\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\nvar router = useRouter();\nvar pid = router.query.pid;\n\nvar Questions = function Questions(props) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: props.detail[0].url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = Questions;\nQuestions.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, detail;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://polls.apiblueprint.org/questions/' + props.pid);\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          detail = _context.sent;\n          return _context.abrupt(\"return\", {\n            detail: detail\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["useRouter","fetch","router","pid","query","Questions","props","detail","url","getInitialProps","res","json"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAIA,IAAMC,MAAM,GAAGF,SAAS,EAAxB;IACQG,G,GAAQD,MAAM,CAACE,K,CAAfD,G;;AAER,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,sBAAO;AAAA,cAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC;AAApB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;;KAAMH,S;AAKNA,SAAS,CAACI,eAAV,yEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACTR,KAAK,CAAC,8CAA8CK,KAAK,CAACH,GAArD,CADI;;AAAA;AACrBO,UAAAA,GADqB;AAAA;AAAA,iBAENA,GAAG,CAACC,IAAJ,EAFM;;AAAA;AAErBJ,UAAAA,MAFqB;AAAA,2CAIpB;AACNA,YAAAA,MAAM,EAANA;AADM,WAJoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAYA,eAAeF,SAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport fetch from 'isomorphic-fetch';\r\n\r\n\r\n\r\nconst router = useRouter()\r\nconst { pid } = router.query\r\n\r\nconst Questions = (props) => {\r\n  return <p>{props.detail[0].url}</p>\r\n}\r\n\r\n\r\nQuestions.getInitialProps = async () => {\t\r\n\tconst res = await fetch('https://polls.apiblueprint.org/questions/' + props.pid);\r\n\tconst detail = await res.json();\r\n\r\n\treturn {\r\n\t\tdetail\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}