{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mehmet\\\\Desktop\\\\yemekcom\\\\pages\\\\questions\\\\[pid].js\";\nimport fetch from 'isomorphic-fetch';\nimport { useRouter } from 'next/router';\n\nfunction Questions({\n  post\n}) {\n  const router = useRouter(); // If the page is not yet generated, this will be displayed\n  // initially until getStaticProps() finishes running\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  } // Render post...\n\n} // This function gets called at build time\n\n\nexport async function getStaticPaths() {\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  return {\n    // Only `/posts/1` and `/posts/2` are generated at build time\n    paths: [{\n      params: {\n        id: router.query\n      }\n    }],\n    // Enable statically generating additional pages\n    // For example: `/posts/3`\n    fallback: true\n  };\n} // This also gets called at build time\n\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n  const res = await fetch(`https://polls.apiblueprint.org/questions/${params.id}`);\n  const post = await res.json(); // Pass post data to the page via props\n\n  return {\n    props: {\n      post\n    },\n    // Re-generate the post at most once per second\n    // if a request comes in\n    revalidate: 1\n  };\n}\nexport default Questions;","map":{"version":3,"sources":["C:/Users/Mehmet/Desktop/yemekcom/pages/questions/[pid].js"],"names":["fetch","useRouter","Questions","post","router","isFallback","getStaticPaths","pid","query","paths","params","id","fallback","getStaticProps","res","json","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA6B;AAC3B,QAAMC,MAAM,GAAGH,SAAS,EAAxB,CAD2B,CAG3B;AACA;;AACA,MAAIG,MAAM,CAACC,UAAX,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAP0B,CAS3B;;AACD,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMF,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAUH,MAAM,CAACI,KAAvB;AAEC,SAAO;AACL;AACAC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,EAAE,EAAEP,MAAM,CAACI;AAAb;AAAV,KAAD,CAFF;AAGL;AACA;AACAI,IAAAA,QAAQ,EAAE;AALL,GAAP;AAOD,C,CAED;;AACA,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA;AAAF,CAA9B,EAA0C;AAC/C;AACA;AACA,QAAMI,GAAG,GAAG,MAAMd,KAAK,CAAE,4CAA2CU,MAAM,CAACC,EAAG,EAAvD,CAAvB;AACA,QAAMR,IAAI,GAAG,MAAMW,GAAG,CAACC,IAAJ,EAAnB,CAJ+C,CAM/C;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AAAEb,MAAAA;AAAF,KADF;AAEL;AACA;AACAc,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAef,SAAf","sourcesContent":["import fetch from 'isomorphic-fetch';\r\n\t\r\nimport { useRouter } from 'next/router'\r\n\r\nfunction Questions({ post }) {\r\n  const router = useRouter()\r\n\r\n  // If the page is not yet generated, this will be displayed\r\n  // initially until getStaticProps() finishes running\r\n  if (router.isFallback) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  // Render post...\r\n}\r\n\r\n// This function gets called at build time\r\nexport async function getStaticPaths() {\r\n\tconst router = useRouter()\r\n\tconst { pid } = router.query\r\n\r\n  return {\r\n    // Only `/posts/1` and `/posts/2` are generated at build time\r\n    paths: [{ params: { id: router.query } }],\r\n    // Enable statically generating additional pages\r\n    // For example: `/posts/3`\r\n    fallback: true,\r\n  }\r\n}\r\n\r\n// This also gets called at build time\r\nexport async function getStaticProps({ params }) {\r\n  // params contains the post `id`.\r\n  // If the route is like /posts/1, then params.id is 1\r\n  const res = await fetch(`https://polls.apiblueprint.org/questions/${params.id}`)\r\n  const post = await res.json()\r\n\r\n  // Pass post data to the page via props\r\n  return {\r\n    props: { post },\r\n    // Re-generate the post at most once per second\r\n    // if a request comes in\r\n    revalidate: 1,\r\n  }\r\n}\r\n\r\nexport default Questions"]},"metadata":{},"sourceType":"module"}